variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
stages:
  - SonarCloud-Quality-Check
  - Build
  - Staging-Deployment
  - UAT-Deployment
  - Production-Deployment
SonarCloud-Quality-Check:
  stage: SonarCloud-Quality-Check
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  only:
    - merge_requests
    - master
    - main
    - staging
    - develop

Build:
  stage: Build
  image: node:latest
  script:
    - npm install react next react-router
    - npm install
    - npm run build
  artifacts:
    paths:
      - out/
    expire_in: 1 week

Staging-Deployment:
  stage: Staging-Deployment
  image:
    name: amazon/aws-cli
    entrypoint: [""]
  script:
    - aws --version
    - aws s3 sync out/ s3://$STAGING_S3_BUCKET
    - aws cloudfront create-invalidation --distribution-id $STAGING_DISTRIBUTION_ID --paths "/*"
  only:
    - staging

UAT-Deployment:
  stage: UAT-Deployment
  image:
    name: amazon/aws-cli
    entrypoint: [""]
  script:
    - aws --version
    #- aws s3 sync ./out/ s3://$UAT_S3_BUCKET
    #- aws cloudfront create-invalidation --distribution-id $UAT_DISTRIBUTION_ID --paths "/*"
  only:
    - uat

Production-Deployment:
  stage: Production-Deployment
  image:
    name: amazon/aws-cli
    entrypoint: [""]
  script:
    - aws --version
    #- aws s3 sync ./out/ s3://$PRODUCTION_S3_BUCKET
    #- aws cloudfront create-invalidation --distribution-id $PRODUCTION_DISTRIBUTION_ID --paths "/*"
  only:
    - master
